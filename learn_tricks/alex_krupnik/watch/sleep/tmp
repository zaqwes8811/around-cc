   /*1. #include <signal.h>  
   2. #include <sys/time.h>  
   3. #include <time.h>  
   4.   
   5. ...   
   6.   
   7.     timer_t mytimer;  
   8.      struct sigevent timer_event;  
   9.     /* 
  10.      * - use signals 
  11.      * - send SIGALRM 
  12.      */  
  13.      timer_event.sigev_notify=SIGEV_SIGNAL;  
  14.      timer_event.sigev_signo= SIGALRM;  
  15.      if (timer_create(CLOCK_REALTIME, &timer_event, &mytimer) < 0)  
  16.         {  
  17.             printf("timer create error");  
  18.             exit(0);  
  19.         }  
  20.     if(timer_settime(mytimer,CLOCK_REALTIME,&timerSettings,NULL)!=0)  
  21.         {  
  22.             printf("timer setting error");  
  23.             exit(0);  
  24.         }  
  25.     while(1)  
  26.             pause();*/
/*
#include <signal.h>
#include <sys/time.h>
#include <time.h>

... 

    timer_t mytimer;
     struct sigevent timer_event;
    /*
     * - use signals
     * - send SIGALRM
     */
     timer_event.sigev_notify=SIGEV_SIGNAL;
     timer_event.sigev_signo= SIGALRM;
     if (timer_create(CLOCK_REALTIME, &timer_event, &mytimer) < 0)
        {
            printf("timer create error");
            exit(0);
        }
    if(timer_settime(mytimer,CLOCK_REALTIME,&timerSettings,NULL)!=0)
        {
            printf("timer setting error");
            exit(0);
        }
    while(1)
            pause();
int timer_delete(timer_t timerid);
*/
