// Autogenerated by - D:/home/lugansky-igor/github/in-the-vicinity-cc/embedded_script_engines/tools/tests_medium/first_level_gen_test.py

//#include "app/config.h"  // TODO: Need impl.
#include "odata/forge_v8_point.h"  // TODO: Need connect real.

// C++
#include <string>

using std::string;

using v8::Object;
using v8::Handle;
using v8::Local;
using v8::Value;
using v8::ObjectTemplate;
using v8::External;
using v8::Context;
using v8::Isolate;
using v8::Persistent;
using v8::Integer;
using v8::String;


V8ScalarGetter_lengthAllParams___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->lengthAllParams___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_counterDebug___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->counterDebug___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_typeControl_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  std::string value = static_cast<unknown*>(ptr)->typeControl_;
  info.GetReturnValue().Set(String::New(value));
}

V8ScalarGetter_failsReseted_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->failsReseted_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_currentQueryIndex_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->currentQueryIndex_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_powerOkTTgr_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->powerOkTTgr_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_needPrintFullPower_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintFullPower_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_needPrintOkPower_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintOkPower_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_FRWOkTTgr_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->FRWOkTTgr_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_needPrintFullFRW_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintFullFRW_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_needPrintOkFRW_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintOkFRW_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_ctrlModeTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ctrlModeTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_typeLoadTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->typeLoadTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_tmitterLockTgrVar___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->tmitterLockTgrVar___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_tmitterOnTgrVar___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->tmitterOnTgrVar___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_powHalfModeTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->powHalfModeTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_istreamTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->istreamTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_outSynTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->outSynTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_statusTmitterTgrVar_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->statusTmitterTgrVar_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_type_tm_digital_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->type_tm_digital_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibWork_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibWork_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_exciterLock_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->exciterLock_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibPowAmpLock_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibPowAmpLock_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_idx_oned_etv_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->idx_oned_etv_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_idx_oned_etv_q_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->idx_oned_etv_q_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibRadioMode_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibRadioMode_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_transmitterReady_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->transmitterReady_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failNet_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->failNet_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failBallast_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->failBallast_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failFRW_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->failFRW_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failCoolling_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->failCoolling_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibPAB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibPAB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibVtv(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibVtv;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failsTotalD_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->failsTotalD_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failsTotalQ_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->failsTotalQ_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failsTotalQQ_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->failsTotalQQ_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibRS485(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibRS485;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibI2C(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibI2C;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_channalValuePacked_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->channalValuePacked_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iChannel(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iChannel;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iChannelSetup(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iChannelSetup;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibPower(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibPower;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_realPowerRepresent___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->realPowerRepresent___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibValueFRW(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibValueFRW;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_FRWValue___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->FRWValue___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSoundLock(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibSoundLock;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSU2St(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->ibSU2St;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_failBallast_Power(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->failBallast_Power;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iBallastPower(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iBallastPower;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_transmitterAddress___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->transmitterAddress___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iMaxTemre(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iMaxTemre;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iMaxStatus(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iMaxStatus;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_new_max_temperature_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->new_max_temperature_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iNewMaxStatus(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iNewMaxStatus;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_connecton_state___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->connecton_state___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_snmp_connecton_status___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->snmp_connecton_status___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_transmitter_number_to_set_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->transmitter_number_to_set_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_fixedAlrmRecordIndex_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->fixedAlrmRecordIndex_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_hasMsgForSnmp_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->hasMsgForSnmp_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_statusRecordIndex_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->statusRecordIndex_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_newFailOccure_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->newFailOccure_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_currentMWFCode_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->currentMWFCode_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_currentAliveFaWa___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uchar value = static_cast<unknown*>(ptr)->currentAliveFaWa___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_FRWOk_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->FRWOk_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_temperatureWasOk_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->temperatureWasOk_;
  info.GetReturnValue().Set(Boolean::New(value));
}

V8ScalarGetter_counterFailsAndWarns_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->counterFailsAndWarns_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iUsedTime(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iUsedTime;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_iUsedReserv(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iUsedReserv;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_lengthCfgAnswer(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->lengthCfgAnswer;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_nominalPower___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->nominalPower___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_numExcitersPack_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->numExcitersPack_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_excitersTotal_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->excitersTotal_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibNumPAB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibNumPAB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_PABTotal_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->PABTotal_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibNumPAinPAB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibNumPAinPAB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_terminal_amps_per_block___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->terminal_amps_per_block___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibNumBCV(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibNumBCV;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_current_nominal_power(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->current_nominal_power;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_total_bcl_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->total_bcl_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibNUMDB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibNUMDB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_DBTotal_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->DBTotal_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSizeIBMod(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibSizeIBMod;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeBlockModParams_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeBlockModParams_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSizeIBPAPAB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibSizeIBPAPAB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeBlockTerminalAmpParams_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeBlockTerminalAmpParams_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSizeIBPrAPAB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibSizeIBPrAPAB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeBlockPreampParams_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeBlockPreampParams_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSizeIBBCV(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibSizeIBBCV;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeBlockBCNParams_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeBlockBCNParams_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibEventStringSize(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibEventStringSize;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeEventsString_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeEventsString_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibFailStringSize(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibFailStringSize;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeFailsString_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeFailsString_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_ibSizeDB(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->ibSizeDB;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_sizeBlockDBParams_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->sizeBlockDBParams_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_transmitterID___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->transmitterID___;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_exciterType_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->exciterType_;
  info.GetReturnValue().Set(Integer::New(value));
}

V8ScalarGetter_countReservedTransmitters_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  uint value = static_cast<unknown*>(ptr)->countReservedTransmitters_;
  info.GetReturnValue().Set(Integer::New(value));
}
