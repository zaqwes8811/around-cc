// Autogenerated by - D:/home/lugansky-igor/github/in-the-vicinity-cc/embedded_script_engines/tools/tests_medium/first_level_gen_test.py

//#include "app/config.h"  // TODO: Need impl.
#include "odata/forge_v8_point.h"  // TODO: Need connect real.

// C++
#include <string>

using std::string;

using v8::Object;
using v8::Handle;
using v8::Local;
using v8::Value;
using v8::ObjectTemplate;
using v8::External;
using v8::Context;
using v8::Isolate;
using v8::Persistent;
using v8::Integer;
using v8::String;


void ForgeV8unknowns::v8_getter_lengthAllParams___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->lengthAllParams___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_counterDebug___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->counterDebug___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_typeControl_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  std::string value = static_cast<unknown*>(ptr)->typeControl_;
  info.GetReturnValue().Set(String::New(value));
}

void ForgeV8unknowns::v8_getter_failsReseted_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->failsReseted_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_currentQueryIndex_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->currentQueryIndex_;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_powerOkTTgr_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->powerOkTTgr_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_needPrintFullPower_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintFullPower_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_needPrintOkPower_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintOkPower_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_FRWOkTTgr_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->FRWOkTTgr_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_needPrintFullFRW_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintFullFRW_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_needPrintOkFRW_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->needPrintOkFRW_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_iChannel(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iChannel;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iChannelSetup(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iChannelSetup;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_realPowerRepresent___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->realPowerRepresent___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_FRWValue___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->FRWValue___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iBallastPower(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iBallastPower;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_transmitterAddress___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->transmitterAddress___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iMaxTemre(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iMaxTemre;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iMaxStatus(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iMaxStatus;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_new_max_temperature_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->new_max_temperature_;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iNewMaxStatus(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iNewMaxStatus;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_connecton_state___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->connecton_state___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_snmp_connecton_status___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->snmp_connecton_status___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_transmitter_number_to_set_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->transmitter_number_to_set_;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_hasMsgForSnmp_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->hasMsgForSnmp_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_statusRecordIndex_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->statusRecordIndex_;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_newFailOccure_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->newFailOccure_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_FRWOk_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->FRWOk_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_temperatureWasOk_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  bool value = static_cast<unknown*>(ptr)->temperatureWasOk_;
  info.GetReturnValue().Set(Boolean::New(value));
}

void ForgeV8unknowns::v8_getter_counterFailsAndWarns_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->counterFailsAndWarns_;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iUsedTime(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iUsedTime;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_iUsedReserv(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->iUsedReserv;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_lengthCfgAnswer(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->lengthCfgAnswer;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_nominalPower___(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->nominalPower___;
  info.GetReturnValue().Set(Integer::New(value));
}

void ForgeV8unknowns::v8_getter_excitersTotal_(
    v8::Local<v8::String> name,
    const v8::PropertyCallbackInfo<v8::Value>& info) 
  {
  Local<Object> self = info.Holder();
  Local<External> wrap = Local<External>::Cast(self->GetInternalField(0));
  void* ptr = wrap->Value();
  int value = static_cast<unknown*>(ptr)->excitersTotal_;
  info.GetReturnValue().Set(Integer::New(value));
}
